"""Classes to define Restaurant Info

Hierachy of Classes:
- Restaurant Info: Object
  - Unique Id: UUID
  - Restaurant Name: str
  - Location: Object
    - Coordinate: Object
    - Address: Object
  - OpeningHours: Object
  - Food Categories: Optional[Set[str]]
  - MenuURL: Optional[HttpUrl]
  - Services: List[str]                  # TODO: Figure out generate
  - Safety Measures: List[str]
  - Dining Ameneties: List[str]
  - Delivery Services: Object
  - Inclusive Tags: List[str]
  - Wheelchair Accessibity: List[str]
"""

from typing import Optional, Set, Dict
from uuid import UUID, uuid4

from pydantic import (BaseModel, Field, HttpUrl)

from deliver.models.utils import to_lower_camel


# TODO: Create Restaurant model
class Restaurant(BaseModel):
    """Class for full restaurant info with validation

    Attributes:
        id (UUID): Unique UUID generated by default
        name (str): Restaurant Name
        location (Location): Data containing coordinate + address

    """
    # TODO: Integrate all fields below
    id: UUID = Field(default_factory=uuid4)
    name: str
    # location: Location
    # opening_hours: OpeningHours
    # food_categories: Set[FoodCategory]
    menu_url: Optional[HttpUrl]
    # safety_measures: Set[SafetyMeasure]
    # dining_ameneties: Set[DiningAmenety]
    # delivery_services: DeliveryServices
    # inclusivity_tags: Set[InclusivityTag]
    # wheelchair_accessibity: Set[WheelchairAccessibity]

    class Config:
        """Config for Restaurant Model

        - Must comply as typical JS/JSON variable name
        """
        alias_generator = to_lower_camel
