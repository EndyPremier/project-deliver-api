"""Classes to define Restaurant Info

Hierachy of Classes:
- Restaurant Info: Object
    - Unique Id: UUID
    - Restaurant Name: str
    - Location: Object
        - Coordinate: Object
        - Address: Object
    - OpeningHours: Object
    - Food Categories: Optional[Set[str]]
    - MenuURL: Optional[HttpUrl]
    - Services: List[str]                  # TODO: Figure out generate
    - Safety Measures: List[str]
    - Dining Ameneties: List[str]
    - Delivery Services: Object
    - Inclusive Tags: List[str]
    - Wheelchair Accessibity: List[str]
"""

from typing import Optional, Set, Dict
from uuid import UUID, uuid4

from pydantic import BaseModel, Field, HttpUrl, conset

from deliver.models.utils    import to_lower_camel
from deliver.models.location import Location
from deliver.models.hours    import OpeningHours
from deliver.models.services import Services


# TODO: Create Restaurant model
class Restaurant(BaseModel):
    """Class for full restaurant info with validation

    Attributes:
        id (UUID): Unique UUID generated by default
        name (str): Restaurant Name
        location (Location):
            Data containing coordinate + address
        opening_hours (OpeningHours):
            A list of hours in the week for available services
        food_category (Set[FoodCategory]):
            A set of type of food, should be non-empty
        dining_available (bool):
            If the restaurant is available for dining
        safety_measures (Optional[Set[SafetyMeasure]]):
            A set of safety measures, required if dining available right now
        dining_ameneties (Optional[Set[DiningAmenety]]):
            A set of ameneties, optional but only if dining
        services (Services):
            A list of pickup and deliver services available
        inclusivities (Set[Inclusivity]):
            A set of inclusivity tags
        wheelchair_accessibilities (Set[WheelchairAccessibity]):
            A set of wheelchair accessibilities
    """
    # TODO: Integrate all fields below
    id: UUID = Field(default_factory=uuid4)
    name: str
    location: Location
    opening_hours: OpeningHours = OpeningHours()
    # food_categories: Set[FoodCategory]
    menu_url: Optional[HttpUrl]
    dining_available: bool = False
    # dining_ameneties: Set[DiningAmenety]
    # safety_measures: Set[SafetyMeasure]
    services: Services = Services()
    # inclusivities: Set[Inclusivity]
    # wheelchair_accessibities: Set[WheelchairAccessibity]

    class Config:
        """Config for Restaurant Model

        - Must comply as typical JS/JSON variable name
        """
        alias_generator = to_lower_camel
